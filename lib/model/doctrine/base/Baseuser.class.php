<?php

/**
 * Baseuser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property Doctrine_Collection $play_lists
 * @property Doctrine_Collection $play_its
 * @property Doctrine_Collection $play_owners
 * @property Doctrine_Collection $reports
 * @property Doctrine_Collection $categories
 * @property Doctrine_Collection $articles
 * @property Doctrine_Collection $comments
 * @property Doctrine_Collection $videoes
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method Doctrine_Collection getPlayLists()   Returns the current record's "play_lists" collection
 * @method Doctrine_Collection getPlayIts()     Returns the current record's "play_its" collection
 * @method Doctrine_Collection getPlayOwners()  Returns the current record's "play_owners" collection
 * @method Doctrine_Collection getReports()     Returns the current record's "reports" collection
 * @method Doctrine_Collection getCategories()  Returns the current record's "categories" collection
 * @method Doctrine_Collection getArticles()    Returns the current record's "articles" collection
 * @method Doctrine_Collection getComments()    Returns the current record's "comments" collection
 * @method Doctrine_Collection getVideoes()     Returns the current record's "videoes" collection
 * @method user                setId()          Sets the current record's "id" value
 * @method user                setPlayLists()   Sets the current record's "play_lists" collection
 * @method user                setPlayIts()     Sets the current record's "play_its" collection
 * @method user                setPlayOwners()  Sets the current record's "play_owners" collection
 * @method user                setReports()     Sets the current record's "reports" collection
 * @method user                setCategories()  Sets the current record's "categories" collection
 * @method user                setArticles()    Sets the current record's "articles" collection
 * @method user                setComments()    Sets the current record's "comments" collection
 * @method user                setVideoes()     Sets the current record's "videoes" collection
 * 
 * @package    islam
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseuser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('playList as play_lists', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('playIt as play_its', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('playOwner as play_owners', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('report as reports', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('category as categories', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('article as articles', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('comment as comments', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('video as videoes', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}