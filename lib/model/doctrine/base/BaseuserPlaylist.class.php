<?php

/**
 * BaseuserPlaylist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $track_id
 * @property sfGuardUser $sfGuardUser
 * @property track $track
 * 
 * @method integer      getUserId()      Returns the current record's "user_id" value
 * @method integer      getTrackId()     Returns the current record's "track_id" value
 * @method sfGuardUser  getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method track        getTrack()       Returns the current record's "track" value
 * @method userPlaylist setUserId()      Sets the current record's "user_id" value
 * @method userPlaylist setTrackId()     Sets the current record's "track_id" value
 * @method userPlaylist setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method userPlaylist setTrack()       Sets the current record's "track" value
 * 
 * @package    addakirine
 * @subpackage model
 * @author     Abderrahman JIHAL
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseuserPlaylist extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_playlist');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('track_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('track', array(
             'local' => 'track_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}